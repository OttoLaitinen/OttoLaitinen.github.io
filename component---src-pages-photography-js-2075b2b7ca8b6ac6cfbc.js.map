{"version":3,"sources":["webpack:///./src/pages/photography.js"],"names":["Image","styled","Img","ImagesContainer","div","query","Photography","images","data","allFile","edges","title","sort","a","b","node","base","localeCompare","map","image","fluid","childImageSharp","alt","split","amount","dir"],"mappings":"2FAAA,2IA+BMA,EAAQC,YAAOC,KAAV,yEAAGD,CAAH,oCAKLE,EAAkBF,IAAOG,IAAV,mFAAGH,CAAH,iBAIRI,EAAK,aAsBHC,UAtDK,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACDC,QAAQC,MAE5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,gBACX,kBAACR,EAAD,KACGI,EACEK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,KAAKC,cAAcH,EAAEC,KAAKC,SAChDE,KAAI,SAAAC,GAAK,OACR,kBAAChB,EAAD,KACE,kBAACH,EAAD,CACEoB,MAAOD,EAAMJ,KAAKM,gBAAgBD,MAClCE,IAAKH,EAAMJ,KAAKC,KAAKO,MAAM,KAAK,KAElC,kBAAC,IAAD,CAASC,OAAO,QAAQC,IAAI","file":"component---src-pages-photography-js-2075b2b7ca8b6ac6cfbc.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Spacing } from \"../components/Spacing\"\nimport CentreLayout from \"../components/CentreLayout\"\nimport SEO from \"../components/seo\"\n\nconst Photography = ({ data }) => {\n  const images = data.allFile.edges\n\n  return (\n    <CentreLayout>\n      <SEO title=\"Photography\" />\n      <ImagesContainer>\n        {images\n          .sort((a, b) => a.node.base.localeCompare(b.node.base))\n          .map(image => (\n            <ImagesContainer>\n              <Image\n                fluid={image.node.childImageSharp.fluid}\n                alt={image.node.base.split(\".\")[0]} // only use section of the file extension with the filename\n              />\n              <Spacing amount=\"large\" dir=\"y\" />\n            </ImagesContainer>\n          ))}\n      </ImagesContainer>\n    </CentreLayout>\n  )\n}\n\nconst Image = styled(Img)`\n  max-width: 500px;\n  margin: 0 auto;\n`\n\nconst ImagesContainer = styled.div`\n  width: 100%;\n`\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n        relativeDirectory: { eq: \"photography\" }\n      }\n    ) {\n      edges {\n        node {\n          base\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Photography\n"],"sourceRoot":""}