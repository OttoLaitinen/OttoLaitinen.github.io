{"version":3,"sources":["webpack:///./src/pages/photography.js"],"names":["Image","styled","Img","ImagesContainer","div","query","Photography","images","data","allFile","edges","array","i","length","j","Math","floor","random","shuffleArray","title","map","image","fluid","node","childImageSharp","alt","base","split","amount","dir"],"mappings":"2FAAA,2IAeA,IAsBMA,EAAQC,YAAOC,KAAV,yEAAGD,CAAH,oCAKLE,EAAkBF,IAAOG,IAAV,mFAAGH,CAAH,iBAIRI,EAAK,aAsBHC,UArDK,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACDC,QAAQC,MAG5B,OAXF,SAAsBC,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAEjB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFiC,KAE7BD,EAAMG,GAFuB,MAS3CI,CAAaX,GAEX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,MAAM,gBACX,kBAAChB,EAAD,KACGI,EAAOa,KAAI,SAAAC,GAAK,OACf,kBAAClB,EAAD,KACE,kBAACH,EAAD,CACEsB,MAAOD,EAAME,KAAKC,gBAAgBF,MAClCG,IAAKJ,EAAME,KAAKG,KAAKC,MAAM,KAAK,KAElC,kBAAC,IAAD,CAASC,OAAO,QAAQC,IAAI","file":"component---src-pages-photography-js-43e215a9a059412d2991.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Spacing } from \"../components/Spacing\"\nimport CentreLayout from \"../components/CentreLayout\"\nimport SEO from \"../components/seo\"\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[array[i], array[j]] = [array[j], array[i]]\n  }\n}\n\nconst Photography = ({ data }) => {\n  const images = data.allFile.edges\n\n  shuffleArray(images)\n  return (\n    <CentreLayout>\n      <SEO title=\"Photography\" />\n      <ImagesContainer>\n        {images.map(image => (\n          <ImagesContainer>\n            <Image\n              fluid={image.node.childImageSharp.fluid}\n              alt={image.node.base.split(\".\")[0]} // only use section of the file extension with the filename\n            />\n            <Spacing amount=\"large\" dir=\"y\" />\n          </ImagesContainer>\n        ))}\n      </ImagesContainer>\n    </CentreLayout>\n  )\n}\n\nconst Image = styled(Img)`\n  max-width: 500px;\n  margin: 0 auto;\n`\n\nconst ImagesContainer = styled.div`\n  width: 100%;\n`\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n        relativeDirectory: { eq: \"photography\" }\n      }\n    ) {\n      edges {\n        node {\n          base\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Photography\n"],"sourceRoot":""}